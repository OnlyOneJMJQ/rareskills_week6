// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/R1CS.sol";

contract R1CSTest is Test {

    R1CS r1cs;

    function setUp() public {
        r1cs = new R1CS();
    }

    function test_encrypted_R1CS() public {
        // Test case: out = 5*x**3 - 4*y**2*x**2 + 13*x*y**2 + x**2 - 10*y
        
        R1CS.G1Point[] memory Ls1 = new R1CS.G1Point[](5);
        Ls1[0] = R1CS.G1Point(1, 2);
        Ls1[1] = R1CS.G1Point(3353031288059533942658390886683067124040920775575537747144343083137631628272, 19321533766552368860946552437480515441416830039777911637913418824951667761761);
        Ls1[1] = R1CS.G1Point(3353031288059533942658390886683067124040920775575537747144343083137631628272, 19321533766552368860946552437480515441416830039777911637913418824951667761761);
        Ls1[3] = R1CS.G1Point(10744596414106452074759370245733544594153395043370666422502510773307029471145, 848677436511517736191562425154572367705380862894644942948681172815252343932);
        Ls1[4] = R1CS.G1Point(17108685722251241369314020928988529881027530433467445791267465866135602972753, 1222130431782367188207392007830208949269408084818660991748674133437768484523);

        R1CS.G2Point[] memory Rs2 = new R1CS.G2Point[](5);
        Rs2[0] = R1CS.G2Point(
            [10857046999023057135944570762232829481370756359578518086990519993285655852781, 11559732032986387107991004021392285783925812861821192530917403151452391805634],
            [8495653923123431417604973247489272438418190587263600148770280649306958101930, 4082367875863433681332203403145435568316851327593401208105741076214120093531]
        );
        Rs2[1] = R1CS.G2Point(
            [2725019753478801796453339367788033689375851816420509565303521482350756874229, 7273165102799931111715871471550377909735733521218303035754523677688038059653],
            [2512659008974376214222774206987427162027254181373325676825515531566330959255, 957874124722006818841961785324909313781880061366718538693995380805373202866]
        );
        Rs2[1] = R1CS.G2Point(
            [2725019753478801796453339367788033689375851816420509565303521482350756874229, 7273165102799931111715871471550377909735733521218303035754523677688038059653],
            [2512659008974376214222774206987427162027254181373325676825515531566330959255, 957874124722006818841961785324909313781880061366718538693995380805373202866]
        );
        Rs2[3] = R1CS.G2Point(
            [18029695676650738226693292988307914797657423701064905010927197838374790804409, 14583779054894525174450323658765874724019480979794335525732096752006891875705],
            [2140229616977736810657479771656733941598412651537078903776637920509952744750, 11474861747383700316476719153975578001603231366361248090558603872215261634898]
        );
        Rs2[3] = R1CS.G2Point(
            [18029695676650738226693292988307914797657423701064905010927197838374790804409, 14583779054894525174450323658765874724019480979794335525732096752006891875705],
            [2140229616977736810657479771656733941598412651537078903776637920509952744750, 11474861747383700316476719153975578001603231366361248090558603872215261634898]
        );

        R1CS.G1Point[] memory Os1 = new R1CS.G1Point[](5);
        Os1[0] = R1CS.G1Point(1, 2);
        Os1[1] = R1CS.G1Point(10744596414106452074759370245733544594153395043370666422502510773307029471145, 848677436511517736191562425154572367705380862894644942948681172815252343932);
        Os1[1] = R1CS.G1Point(10744596414106452074759370245733544594153395043370666422502510773307029471145, 848677436511517736191562425154572367705380862894644942948681172815252343932);
        Os1[1] = R1CS.G1Point(10744596414106452074759370245733544594153395043370666422502510773307029471145, 848677436511517736191562425154572367705380862894644942948681172815252343932);
        Os1[4] = R1CS.G1Point(9642222084729607517877300695132775567109325334448449884825136965142866412173, 4237181956005900153121967166075358295245559468450620141848474158744070559022);

        bool verified = r1cs.verify_r1cs(Ls1, Rs2, Os1);
        assertTrue(verified, "verification failed");
    }
}
